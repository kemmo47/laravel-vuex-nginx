version: '3'

services:
  nginx:
    build:
      context: .
      dockerfile: ./docker/nginx/Dockerfile
    image: nginx:alpine
    container_name: training_nginx_proxy
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/conf.d/default.conf
      - ./vuejs:/var/www/html
      - ./laravel:/var/www/api
    depends_on:
      - vuejs
      - composer_installation
    ports:
      - 80:80
    networks:
      - app

  vuejs:
    image: training_vuejs
    container_name: training_vuejs
    build:
      context: .
      dockerfile: ./docker/vue/Dockerfile
    volumes:
      - ./vuejs:/var/www/html
    ports:
      - 8080:8080
    depends_on:
      - php
    networks:
      - app

  php:
    image: training_php
    build:
      context: ./docker/laravel
      dockerfile: Dockerfile
    container_name: training_php
    ports:
      - 9000:9000
    volumes:
      - ./laravel:/var/www/api
    depends_on:
      - db
    restart: always
    networks:
      - app

  db:
    image: mysql:5.7.22
    container_name: database
    restart: unless-stopped
    tty: true
    ports:
      - "3306:3306"
    command: --default-authentication-plugin=mysql_native_password
    volumes:
      - ./docker/mysql:/var/lib/mysql
      - ./docker/init/todo.sql:/docker-entrypoint-initdb.d/todo.sql
    environment: 
      MYSQL_DATABASE: todo
      MYSQL_USER: apptodo
      MYSQL_PASSWORD: todo
      MYSQL_ROOT_PASSWORD: todo
    networks:
      - app

  composer_installation:
    container_name: composer_installation
    image: composer
    volumes:
      - ./laravel:/app
    command: composer install --ignore-platform-reqs
    networks:
      - app

networks:
  app: